# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

## Mounting by label advantage: This config can be used on any computer like this, UUID change if you create a new partition
  fileSystems."/" =
    { #device = "/dev/disk/by-uuid/caa72675-967c-4f50-b102-4489d06808d4";
      device = "/dev/disk/by-label/nixos";
      fsType = "ext4";
    };

## LUKSv2 supports labels when you create a luks container you can use `... --label foo`
  #boot.initrd.luks.devices."primary".device = "/dev/disk/by-uuid/5f483953-8183-4826-b224-36e2bdbf10be";
  boot.initrd.luks.devices."primary".device = "/dev/disk/by-label/crypto-nixos";

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-label/boot";
      fsType = "vfat";
    };

  fileSystems."/data" =
    { #device = "/dev/disk/by-uuid/04dfbb6a-d34e-488b-a2ae-b75d3807dc86";
      device = "/dev/disk/by-label/data";
      fsType = "ext4";
    };

  #boot.initrd.luks.devices."secondary".device = "/dev/disk/by-uuid/1b999bb7-821d-4898-9398-b81948267729";
  boot.initrd.luks.devices."secondary".device = "/dev/disk/by-label/crypto-data";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/7610aae5-342a-40fa-917b-54a36f41fdf7"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.interfaces.enp11s0.useDHCP = lib.mkDefault true;
  networking.interfaces.wlp10s0.useDHCP = lib.mkDefault false;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
